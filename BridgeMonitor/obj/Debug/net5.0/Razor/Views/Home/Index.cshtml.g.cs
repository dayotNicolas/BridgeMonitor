#pragma checksum "C:\Users\Dayot\OneDrive\Desktop\architecture_logiciel\BridgeMonitor\BridgeMonitor\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "811592311d49fd97b573369f7f2eb523f725f05b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Dayot\OneDrive\Desktop\architecture_logiciel\BridgeMonitor\BridgeMonitor\Views\_ViewImports.cshtml"
using BridgeMonitor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Dayot\OneDrive\Desktop\architecture_logiciel\BridgeMonitor\BridgeMonitor\Views\_ViewImports.cshtml"
using BridgeMonitor.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Dayot\OneDrive\Desktop\architecture_logiciel\BridgeMonitor\BridgeMonitor\Views\Home\Index.cshtml"
using System.Globalization;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"811592311d49fd97b573369f7f2eb523f725f05b", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0f76db85423d1966422131999df760b0ec79fa9c", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Boat>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\Users\Dayot\OneDrive\Desktop\architecture_logiciel\BridgeMonitor\BridgeMonitor\Views\Home\Index.cshtml"
  
    var culture = new CultureInfo("fr-FR");
    var heureNum = (int)Model.ClosingDate.Hour;
    var dateTest = new DateTime(2021, 06, 12, 18, 32, 27);

#line default
#line hidden
#nullable disable
            WriteLiteral("<html>\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "811592311d49fd97b573369f7f2eb523f725f05b3865", async() => {
                WriteLiteral("\r\n");
                DefineSection("Styles", async() => {
                    WriteLiteral(@"
            <style>
                body {
                    text-align: center;
                    background: #00ECB9;
                    font-family: sans-serif;
                    font-weight: 100;
                }

                h1 {
                    color: #396;
                    font-weight: 100;
                    font-size: 40px;
                    margin: 40px 0px 20px;
                }

                #clockdiv {
                    font-family: sans-serif;
                    color: #fff;
                    display: inline-block;
                    font-weight: 100;
                    text-align: center;
                    font-size: 30px;
                }

                    #clockdiv > div {
                        padding: 10px;
                        border-radius: 3px;
                        background: #00BF96;
                        display: inline-block;
                    }

                    #clockdiv div > span {
           ");
                    WriteLiteral(@"             padding: 15px;
                        border-radius: 3px;
                        background: #00816A;
                        display: inline-block;
                    }

                .smalltext {
                    padding-top: 5px;
                    font-size: 16px;
                }

                #buttonValide {
                    display: inline-block;
                    background-color: #7b38d8;
                    border-radius: 10px;
                    border: 4px double #cccccc;
                    color: #eeeeee;
                    text-align: center;
                    font-size: 28px;
                    padding: 20px;
                    width: 200px;
                    -webkit-transition: all 0.5s;
                    -moz-transition: all 0.5s;
                    -o-transition: all 0.5s;
                    transition: all 0.5s;
                    cursor: pointer;
                    margin: 5px;
                }

                #bu");
                    WriteLiteral(@"ttonValide:hover {
                    background-color: green;
                }

                #buttonBouchon {
                    display: inline-block;
                    background-color: #7b38d8;
                    border-radius: 10px;
                    border: 4px double #cccccc;
                    color: #eeeeee;
                    text-align: center;
                    font-size: 28px;
                    padding: 20px;
                    width: 200px;
                    -webkit-transition: all 0.5s;
                    -moz-transition: all 0.5s;
                    -o-transition: all 0.5s;
                    transition: all 0.5s;
                    cursor: pointer;
                    margin: 5px;
                }

                #buttonBouchon:hover {
                    background-color: red;
                }
            </style>
        ");
                }
                );
                WriteLiteral("    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "811592311d49fd97b573369f7f2eb523f725f05b8040", async() => {
                WriteLiteral("\r\n        <div class=\"text-center\">\r\n            <h1 class=\"display-4\">Prochaine fermeture</h1>\r\n            <h2>La prochaine fermeture aura lieu : le ");
#nullable restore
#line 103 "C:\Users\Dayot\OneDrive\Desktop\architecture_logiciel\BridgeMonitor\BridgeMonitor\Views\Home\Index.cshtml"
                                                 Write(Model.ClosingDate.ToString("dddd d MMMM, hh:mm", culture));

#line default
#line hidden
#nullable disable
                WriteLiteral("</h2>\r\n            <h2>La réouverture ne sera pas avant : le ");
#nullable restore
#line 104 "C:\Users\Dayot\OneDrive\Desktop\architecture_logiciel\BridgeMonitor\BridgeMonitor\Views\Home\Index.cshtml"
                                                 Write(Model.ReopeningDate.ToString("dddd d MMMM, hh:mm", culture));

#line default
#line hidden
#nullable disable
                WriteLiteral("</h2>\r\n");
#nullable restore
#line 105 "C:\Users\Dayot\OneDrive\Desktop\architecture_logiciel\BridgeMonitor\BridgeMonitor\Views\Home\Index.cshtml"
             if (Model.BoatName == "MAINTENANCE")
            {

#line default
#line hidden
#nullable disable
                WriteLiteral("                <p>Fermeture pour : ");
#nullable restore
#line 107 "C:\Users\Dayot\OneDrive\Desktop\architecture_logiciel\BridgeMonitor\BridgeMonitor\Views\Home\Index.cshtml"
                               Write(Model.BoatName);

#line default
#line hidden
#nullable disable
                WriteLiteral("</p>\r\n");
#nullable restore
#line 108 "C:\Users\Dayot\OneDrive\Desktop\architecture_logiciel\BridgeMonitor\BridgeMonitor\Views\Home\Index.cshtml"
            }
            else
            {

#line default
#line hidden
#nullable disable
                WriteLiteral("                <p>Fermé pour le passage du ");
#nullable restore
#line 111 "C:\Users\Dayot\OneDrive\Desktop\architecture_logiciel\BridgeMonitor\BridgeMonitor\Views\Home\Index.cshtml"
                                       Write(Model.BoatName);

#line default
#line hidden
#nullable disable
                WriteLiteral("</p>\r\n");
#nullable restore
#line 112 "C:\Users\Dayot\OneDrive\Desktop\architecture_logiciel\BridgeMonitor\BridgeMonitor\Views\Home\Index.cshtml"
            }

#line default
#line hidden
#nullable disable
#nullable restore
#line 113 "C:\Users\Dayot\OneDrive\Desktop\architecture_logiciel\BridgeMonitor\BridgeMonitor\Views\Home\Index.cshtml"
              
                var duree = Model.ReopeningDate - Model.ClosingDate;
            

#line default
#line hidden
#nullable disable
                WriteLiteral("            <p>Le pont sera fermé pendant ");
#nullable restore
#line 116 "C:\Users\Dayot\OneDrive\Desktop\architecture_logiciel\BridgeMonitor\BridgeMonitor\Views\Home\Index.cshtml"
                                     Write(duree.Hours);

#line default
#line hidden
#nullable disable
                WriteLiteral(" heure(s) ");
#nullable restore
#line 116 "C:\Users\Dayot\OneDrive\Desktop\architecture_logiciel\BridgeMonitor\BridgeMonitor\Views\Home\Index.cshtml"
                                                           Write(duree.Minutes);

#line default
#line hidden
#nullable disable
                WriteLiteral(@" minute(s)</p>
        </div>


        <h1>Temps restant avant la prochaine fermeture</h1>
        <div id=""clockdiv"">
            <div>
                <span class=""days""></span>
                <div class=""smalltext"">Jours</div>
            </div>
            <div>
                <span class=""hours""></span>
                <div class=""smalltext"">Heures</div>
            </div>
            <div>
                <span class=""minutes""></span>
                <div class=""smalltext"">Minutes</div>
            </div>
            <div>
                <span class=""seconds""></span>
                <div class=""smalltext"">Secondes</div>
            </div>
        </div>
        <div id=""indicateur"">
");
#nullable restore
#line 140 "C:\Users\Dayot\OneDrive\Desktop\architecture_logiciel\BridgeMonitor\BridgeMonitor\Views\Home\Index.cshtml"
             if (heureNum >= 7 && heureNum <= 9)
            {

#line default
#line hidden
#nullable disable
                WriteLiteral("                <button id=\"buttonBouchon\"> le trafic sera perturbé !</button>\r\n");
#nullable restore
#line 143 "C:\Users\Dayot\OneDrive\Desktop\architecture_logiciel\BridgeMonitor\BridgeMonitor\Views\Home\Index.cshtml"
            }
            else if (heureNum >= 17 && heureNum <= 19)
            {

#line default
#line hidden
#nullable disable
                WriteLiteral("                <button id=\"buttonBouchon\"> le trafic sera perturbé !</button>\r\n");
#nullable restore
#line 147 "C:\Users\Dayot\OneDrive\Desktop\architecture_logiciel\BridgeMonitor\BridgeMonitor\Views\Home\Index.cshtml"
            }
            else
            {

#line default
#line hidden
#nullable disable
                WriteLiteral("                <button id=\"buttonValide\">Pas de risque de Trafic perturbé !</button>\r\n");
#nullable restore
#line 151 "C:\Users\Dayot\OneDrive\Desktop\architecture_logiciel\BridgeMonitor\BridgeMonitor\Views\Home\Index.cshtml"
            }

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n        </div>\r\n\r\n        <input type=\"hidden\"");
                BeginWriteAttribute("value", " value=\"", 5229, "\"", 5296, 1);
#nullable restore
#line 155 "C:\Users\Dayot\OneDrive\Desktop\architecture_logiciel\BridgeMonitor\BridgeMonitor\Views\Home\Index.cshtml"
WriteAttributeValue("", 5237, Model.ClosingDate.ToString("yyyy-MM-ddThh:mm:ss", culture), 5237, 59, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" id=\"toGet\" />\r\n    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"


    <script type=""text/javascript"">

        function getTimeRemaining(endtime) {
            const total = Date.parse(endtime) - Date.parse(new Date());
            const seconds = Math.floor((total / 1000) % 60);
            const minutes = Math.floor((total / 1000 / 60) % 60);
            const hours = Math.floor((total / (1000 * 60 * 60)) % 24);
            const days = Math.floor(total / (1000 * 60 * 60 * 24));

            return {
                total,
                days,
                hours,
                minutes,
                seconds
            };
        }

        function initializeClock(id, endtime) {
            const clock = document.getElementById(id);
            const daysSpan = clock.querySelector('.days');
            const hoursSpan = clock.querySelector('.hours');
            const minutesSpan = clock.querySelector('.minutes');
            const secondsSpan = clock.querySelector('.seconds');

            function updateClock() {
                ");
                WriteLiteral(@"const t = getTimeRemaining(endtime);

                daysSpan.innerHTML = t.days;
                hoursSpan.innerHTML = ('0' + t.hours).slice(-2);
                minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);
                secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);

                if (t.total <= 0) {
                    clearInterval(timeinterval);
                }
            }

            updateClock();
            const timeinterval = setInterval(updateClock, 1000);
        }

        const deadline = new Date(document.getElementById(""toGet"").value);
        initializeClock('clockdiv', deadline);
    </script>

");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Boat> Html { get; private set; }
    }
}
#pragma warning restore 1591
